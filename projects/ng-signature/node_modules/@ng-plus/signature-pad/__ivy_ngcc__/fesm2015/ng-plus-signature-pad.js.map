{"version":3,"file":"ng-plus-signature-pad.js","sources":["@ng-plus/signature-pad/projects/signature-pad/src/lib/signature-pad.component.ts","@ng-plus/signature-pad/projects/signature-pad/src/lib/signature-pad.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA,MAAA,qBAAA,CAAA;AAAG,IA+BC,WAAJ,GAAA;AAAG,QA1BH,IAAA,CAAA,MAAA,GAA6B,EAAE,CAA/B;AAAE,QACF,IAAA,CAAA,YAAA,GAA6B,IAAI,YAAY,EAAO,CAApD;AAAE,QAEF,IAAA,CAAA,QAAA,GAAwB,IAAI,CAA5B;AAAE,QACF,IAAA,CAAA,aAAA,GAA6B,KAAK,CAAlC;AAAE,QAEF,IAAA,CAAA,QAAA,GAAwB,OAAO,CAA/B;AAAE,QACF,IAAA,CAAA,eAAA,GAA+B,aAAa,CAA5C;AAAE,QAEF,IAAA,CAAA,cAAA,GAA8B,IAAI,CAAlC;AAAE,QACF,IAAA,CAAA,cAAA,GAA8B,MAAM,CAApC;AAAE,QACF,IAAA,CAAA,eAAA,GAA+B,iBAAiB,CAAhD;AAAE,QACF,IAAA,CAAA,eAAA,GAA+B,IAAI,CAAnC;AAAE,QACF,IAAA,CAAA,eAAA,GAA+B,OAAO,CAAtC;AAAE,QACF,IAAA,CAAA,gBAAA,GAAgC,iBAAiB,CAAjD;AAAE,QAEF,IAAA,CAAA,MAAA,GAAkD,MAAM,CAAxD;AAAE,QAEF,IAAA,CAAA,MAAA,GAAsB,GAAG,CAAzB;AAAE,QACF,IAAA,CAAA,KAAA,GAAqB,GAAG,CAAxB;AAAE,QAEF,IAAA,CAAA,IAAA,GAAqB,IAAI,YAAY,EAAE,CAAvC;AAAE,QACF,IAAA,CAAA,OAAA,GAAwB,IAAI,YAAY,EAAE,CAA1C;AAAE,QAEF,IAAA,CAAA,UAAA,GAA0B,IAAI,CAA9B;AAAE,KAGG;AAEL;AAAS;AAGJ;AAAS,IAHV,QAAQ,GAAZ;AAAG,KACE;AAEL;AAAS;AACJ;AAAS,IADV,eAAe,GAAnB;AAAG;AACkB,QACb,IAAI,IAAI,CAAC,UAAU,EAAE;AAC5B,YAAW,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,MAA9C;AAAG,gBACa,IAAI,CAAC,YAAY,EAAE,CAAC;AACnC,aAAY,CAAC,CAAC;AACd,YAAW,IAAI,CAAC,YAAY,EAAE,CAAC;AAC/B,SAAQ;AACR,QAAO,IAAI,CAAC,OAAO,EAAE,CAAC;AACtB,KAAI;AAEL;AAAS;AACI;AAAS,IADlB,OAAO,GAAX;AAAG,QACK,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;AAC1E,YAAW,QAAQ,EAAE,IAAI,CAAC,QAAQ;AAClC,YAAW,eAAe,EAAE,IAAI,CAAC,eAAe;AAChD,SAAQ,CAAC,CAAC;AACV,QAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;AAEnD,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;AAC1B,YAAW,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,CAAC;AAClC,SAAQ;AAAE,aAAI;AACd,YAAW,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC;AACnC,SAAQ;AAET,QAAQ,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,MAAlC;AAAG,YACS,IAAI,CAAC,UAAU,EAAE,CAAC;AAC7B,YAAW,IAAI,IAAI,CAAC,aAAa,EAAE;AACnC,gBAAe,IAAI,CAAC,QAAQ,EAAE,CAAC;AAC/B,aAAY;AACZ,SAAQ,CAAC;AAEV,QAAQ,IAAI,CAAC,WAAW,EAAE,CAAC;AAC1B,QAAO,IAAI,IAAI,CAAC,aAAa,EAAE;AAC/B,YAAW,IAAI,CAAC,QAAQ,EAAE,CAAC;AAC3B,SAAQ;AACR,KAAI;AAEL;AAAS;AACG;AAAS,IADjB,QAAQ,GAAZ;AAAG,QACK,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;AACjC,QAAO,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;AAC3B,QAAO,IAAI,CAAC,UAAU,EAAE,CAAC;AACzB,QAAO,IAAI,IAAI,CAAC,aAAa,EAAE;AAC/B,YAAW,IAAI,CAAC,QAAQ,EAAE,CAAC;AAC3B,SAAQ;AACR,KAAI;AAEL;AAAS;AAED;AAAS,IAFb,WAAW,GAAf;AAAG,QAEK,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;AAAG,YAAD,OAAO;AAAE,SAAA;AAE3D,QAAQ,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;AAElC,QAAQ,uBAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;AAEjF,QAAQ,uBAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AAC9D,QAAO,MAAM,CAAC,OAAO,CAAC,KAAK,IAA5B;AAAG,YACS,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,IAAnC;AAAG,gBACa,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,UAAU,CAAC;AACxC,gBAAe,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,UAAU,CAAC;AACxC,aAAY,CAAC,CAAC;AACd,SAAQ,CAAC,CAAC;AACV,QAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC1C,KAAI;AAEL;AAAS;AACC;AAAS,IADf,UAAU,GAAd;AAAG,QACK,uBAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;AAChF,QAAO,uBAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AAC7E,QAAO,MAAM,CAAC,OAAO,CAAC,KAAK,IAA5B;AAAG,YACS,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,IAAnC;AAAG,gBACa,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,UAAU,CAAC;AACxC,gBAAe,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,UAAU,CAAC;AACxC,aAAY,CAAC,CAAC;AACd,SAAQ,CAAC,CAAC;AACV,QAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACtC,KAAI;AAEL;AAAS;AACN;AAAS,IADR,iBAAiB,GAArB;AAAG,QACK,IAAI,CAAC,UAAU,EAAE,CAAC;AACzB,QAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;AACvB,KAAI;AAEL;AAAS;AAEE;AAAS,IAFhB,QAAQ,GAAZ;AAAG,QAEK,QAAQ,IAAI,CAAC,MAAM;AAE3B,YAAY,KAAK,QAAQ;AACxB,gBAAe,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,CAAC;AAC7D,gBAAe,MAAM;AAEtB,YAAY,KAAK,MAAM;AACtB,gBAAe,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,CAAC;AAC1D,gBAAe,MAAM;AAEtB,YAAY;AACX,gBAAe,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,IAAI,KAAzD;AAAG,oBACiB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACxC,iBAAgB,CAAC,CAAC;AAClB,gBAAe,MAAM;AACrB,SAAQ;AAET,KAAK;AAEL;AACQ;AAEF;AAAS,IAFX,YAAY,GAAhB;AAAG,QAEK,uBAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;AACnD,QAAO,IAAI,CAAC,MAAM,EAAE;AAAG,YAAD,OAAO;AAAE,SAAA;AAEhC,QAAQ,uBAAM,GAAG,qBAAG,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAgB,CAAA,CAAC;AACnE,QAAO,IAAI,CAAC,GAAG,EAAE;AAAG,YAAD,OAAO;AAAE,SAAA;AAE7B,QAAQ,uBAAM,CAAC,GAAG,GAAG,CAAC,WAAW,CAAC;AACjC,QAAO,uBAAM,CAAC,GAAG,GAAG,CAAC,WAAW,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;AAE/D,QAAQ,MAAM,CAAC,YAAY,CAAC,OAAO,EAAE,CAArC,EAAwC,CAAC,CAAzC,CAA2C,CAAC,CAAC;AAC5C,QAAO,MAAM,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAtC,EAAyC,CAAC,CAA1C,CAA4C,CAAC,CAAC;AAE9C,QAAQ,IAAI,CAAC,WAAW,EAAE,CAAC;AAE3B,KAAK;AAEL;2CA7KA,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,mBACP,QAAQ,EAAE,kBAAkB;gBAC5B,QAAQ,EAAE,CAAd;;;;;8DAUA,CAAC,mBACG,MAAM,EAAE,CAAC,CAAb,gFAAA,CAA+F,CAAC,eAC/F,EAAD,EAAA;;;;;;;;;;;;;;sNACE;AAAE;AAAoB;AAErB;AACE,IAAL,WAAA,EAAA,CAAA,EAAA,IAAA,EAAK,SAAS,EAAd,IAAA,EAAA,CAAe,QAAQ,EAAE,EAAC,IAAI,EAAE,UAAU,EAAC,EAA3C,EAAA,EAAA;AAAG,IAEH,QAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,EAAA;AAAG,IACH,cAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,EAAA;AAAG,IAEH,UAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,EAAA;AAAG,IACH,eAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,EAAA;AAAG,IAEH,UAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,EAAA;AAAG,IACH,iBAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,EAAA;AAAG,IAEH,gBAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,EAAA;AAAG,IACH,gBAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,EAAA;AAAG,IACH,iBAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,EAAA;AAAG,IACH,iBAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,EAAA;AAAG,IACH,iBAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,EAAA;AAAG,IACH,kBAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,EAAA;AAAG,IAEH,QAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,EAAA;AAAG,IAEH,QAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,EAAA;AAAG,IACH,OAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,EAAA;AAAG,IAEH,MAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,EAAA;AAAG,IACH,SAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,EAAA;AAAG,IAEH,YAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,EAAA;AAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAC;AAAK;AAEE;AAMT;AC9CL,MAAA,kBAAA,CAAA;AAAG;wCALH,EAAA,IAAA,EAAC,QAAQ,EAAT,IAAA,EAAA,CAAU,mBACR,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,YAAY,EAAE,CAAC,qBAAqB,CAAC,mBACrC,OAAO,EAAE,CAAC;QAAqB,CAAC,eACjC,EAAD,EAAA;;;;;;;;;oSACE;AAAC;AAAC;AAAK;AACD;AAA0C;AAAI;AAAC;AAAK;AAAmC;AAA0C;AAAI;AAAC;AAAsD","sourcesContent":["import {AfterViewInit, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild} from \"@angular/core\";\nimport * as SignaturePad from 'signature_pad/dist/signature_pad';\n\n@Component({\n    selector: 'ng-signature-pad',\n    template: `<div class=\"signature-pad\">\r\n    <canvas\r\n        [width]=\"width\"\r\n        [height]=\"height\"\r\n        #canvas></canvas>\r\n    <div class=\"buttons\">\r\n        <button [class]=\"doneButtonClass\" *ngIf=\"showDoneButton\" (click)=\"emitPointsAndBlob()\">{{ doneButtonText }}</button>\r\n        <button [class]=\"clearButtonClass\" *ngIf=\"showClearButton\" (click)=\"clearPad()\">{{ clearButtonText }}</button>\r\n    </div>\r\n</div>\r\n`,\n    styles: [`.signature-pad canvas{background:#f2f2f2}.signature-pad .btn{margin-right:.25em}`]\n})\nexport class SignaturePadComponent implements OnInit, AfterViewInit {\n\n    private signaturePad: SignaturePad;\n    @ViewChild('canvas', {read: ElementRef}) canvasRef: ElementRef;\n\n    @Input() points: any[] = [];\n    @Output() pointsChange = new EventEmitter<any>();\n\n    @Input() editable = true;\n    @Input() emitOnDragEnd = false;\n\n    @Input() penColor = 'black';\n    @Input() backgroundColor = 'transparent';\n\n    @Input() showDoneButton = true;\n    @Input() doneButtonText = 'Done';\n    @Input() doneButtonClass = 'btn btn-primary';\n    @Input() showClearButton = true;\n    @Input() clearButtonText = 'Clear';\n    @Input() clearButtonClass = 'btn btn-default';\n\n    @Input() format: 'blob' | 'base64' | 'json' = 'blob';\n\n    @Input() height = 150;\n    @Input() width = 600;\n\n    @Output() done = new EventEmitter();\n    @Output() cleared = new EventEmitter();\n\n    @Input() responsive = true;\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    ngAfterViewInit() {\n        // Resize Canvas to full screen:\n        if (this.responsive) {\n            window.addEventListener('resize', () => {\n                this.resizeCanvas();\n            });\n            this.resizeCanvas();\n        }\n        this.initPad();\n    }\n\n    initPad() {\n        this.signaturePad = new SignaturePad(this.canvasRef.nativeElement, {\n            penColor: this.penColor,\n            backgroundColor: this.backgroundColor\n        });\n        this.signaturePad.penColor = this.penColor;\n\n        if (this.editable) {\n            this.signaturePad.on();\n        } else {\n            this.signaturePad.off();\n        }\n\n        this.signaturePad.onEnd = () => {\n            this.emitPoints();\n            if (this.emitOnDragEnd) {\n                this.emitBlob();\n            }\n        };\n\n        this.applyPoints();\n        if (this.emitOnDragEnd) {\n            this.emitBlob();\n        }\n    }\n\n    clearPad() {\n        this.signaturePad.clear();\n        this.cleared.emit();\n        this.emitPoints();\n        if (this.emitOnDragEnd) {\n            this.emitBlob();\n        }\n    }\n\n    applyPoints() {\n\n        if (!this.points || !this.signaturePad) { return; }\n\n        this.signaturePad.clear();\n\n        const multiplier = this.canvasRef.nativeElement.offsetWidth / this.width;\n\n        const points = JSON.parse(JSON.stringify(this.points));\n        points.forEach(group => {\n            group.points.forEach(pt => {\n                pt.x = pt.x * multiplier;\n                pt.y = pt.y * multiplier;\n            });\n        });\n        this.signaturePad.fromData(points);\n    }\n\n    emitPoints() {\n        const multiplier = this.canvasRef.nativeElement.offsetWidth / this.width;\n        const points = JSON.parse(JSON.stringify(this.signaturePad.toData()));\n        points.forEach(group => {\n            group.points.forEach(pt => {\n                pt.x = pt.x / multiplier;\n                pt.y = pt.y / multiplier;\n            });\n        });\n        this.pointsChange.emit(points);\n    }\n\n    emitPointsAndBlob() {\n        this.emitPoints();\n        this.emitBlob();\n    }\n\n    emitBlob() {\n\n        switch (this.format) {\n\n            case 'base64':\n                this.done.emit(this.signaturePad.toDataURL());\n                break;\n\n            case 'json':\n                this.done.emit(this.signaturePad.toData());\n                break;\n\n            default:\n                this.canvasRef.nativeElement.toBlob((blob) => {\n                    this.done.emit(blob);\n                });\n                break;\n        }\n\n    }\n\n\n    resizeCanvas() {\n\n        const canvas = this.canvasRef.nativeElement;\n        if (!canvas) { return; }\n\n        const pad = canvas.closest('.signature-pad') as HTMLElement;\n        if (!pad) { return; }\n\n        const w = pad.offsetWidth;\n        const h = pad.offsetWidth / (this.width / this.height);\n\n        canvas.setAttribute('width', `${w}`);\n        canvas.setAttribute('height', `${h}`);\n\n        this.applyPoints();\n\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { SignaturePadComponent } from './signature-pad.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [SignaturePadComponent],\n  exports: [SignaturePadComponent]\n})\nexport class SignaturePadModule { }\n"]}